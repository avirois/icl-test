version: 0.2

# env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  # exported-variables:
     
     # - variable
     # - variable
  #git-credential-helper: yes
#batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
  #build-graph:
phases:
  install:
    #npm i
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    commands:
      - cd cdk_testing
      - apt-get update -y
      - npm update npm -g
      - npm install -g npm@latest
      - npm install
      - npm install -g aws-cdk
      # - command
      # - command
  pre_build:
    commands:
      # - command
      # - command
  build:
    commands:
      - echo $projectName
      - echo $toDestroy
      - echo $params
      - |
        if [ "$toDestroy" = "no" ]; then 
           aws dynamodb update-item --table-name armappdemo --key '{"name":{"S":"'"${app_type}-${projectName}"'"}}' --region eu-west-1 --attribute-updates '{"status":{"Value":{"S":"deploying..."},"Action":"PUT"}}'

           cdk deploy $params --hotswap --require-approval never
           
           if [ "$?" = "0" ]; then
              aws dynamodb update-item --table-name armappdemo --key '{"name":{"S":"'"${app_type}-${projectName}"'"}}' --region eu-west-1 --attribute-updates '{"status":{"Value":{"S":"deployed"},"Action":"PUT"}}';
              echo "?=0";
           else
              aws dynamodb update-item --table-name armappdemo --key '{"name":{"S":"'"${app_type}-${projectName}"'"}}' --region eu-west-1 --attribute-updates '{"status":{"Value":{"S":"failed"},"Action":"PUT"}}';
              echo "?!=0";
           fi
           
            
        fi
      - |
        if [ "$toDestroy" = "yes" ]; then 
           aws dynamodb update-item --table-name armappdemo --key '{"name":{"S":"'"${app_type}-${projectName}"'"}}' --region eu-west-1 --attribute-updates '{"status":{"Value":{"S":"deleting..."},"Action":"PUT"}}'

           cdk destroy $params --force
           if [ "$?" = "0" ]; then
              aws dynamodb update-item --table-name armappdemo --key '{"name":{"S":"'"${app_type}-${projectName}"'"}}' --region eu-west-1 --attribute-updates '{"status":{"Value":{"S":"deleted"},"Action":"PUT"}}';
           else
              aws dynamodb update-item --table-name armappdemo --key '{"name":{"S":"'"${app_type}-${projectName}"'"}}' --region eu-west-1 --attribute-updates '{"status":{"Value":{"S":"failed"},"Action":"PUT"}}';
           fi
           
        fi
         
         
      # - echo $toDestroy | grep 'yes' && cdk destroy --force
      # - echo $toDestroy | grep 'no' &&  cdk deploy --hotswap --require-approval never
      # - cdk deploy --hotswap --require-approval never
      
        
      # - command
  # post_build:
  #   commands:
      # - command
      # - command
      #dynamodb change status
      
      
      
      
      
